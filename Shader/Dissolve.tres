[gd_resource type="VisualShader" load_steps=15 format=3 uid="uid://c7k6vmr26vrfo"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_wil4r"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_00u2v"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_yjawc"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_5crao"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_myc5b"]
default_input_values = [0, 0.0, 1, 0.01]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_shiwb"]
parameter_name = "ColorParameter"
default_value_enabled = true
default_value = Color(0.0735226, 0.722229, 0.923573, 1)

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_bwy24"]
parameter_name = "Noise"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_llcj6"]
source = 5

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_ou0xk"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_owyna"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_h8mbp"]
constant = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_j2lpo"]
parameter_name = "DissolveValue"
hint = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yqomr"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_wtwit"]
expanded_output_ports = [0]
source = 5

[resource]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 ColorParameter : source_color = vec4(0.073523, 0.722229, 0.923573, 1.000000);
uniform sampler2D Noise;
uniform float DissolveValue : hint_range(0, 1);



void fragment() {
// ColorParameter:16
	vec4 n_out16p0 = ColorParameter;


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(TEXTURE, UV);
	float n_out9p4 = n_out9p0.a;


// Input:11
	vec2 n_out11p0 = SCREEN_UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Noise, n_out11p0);


// FloatParameter:7
	float n_out7p0 = DissolveValue;


// FloatConstant:5
	float n_out5p0 = 0.000000;


// FloatConstant:6
	float n_out6p0 = 1.000000;


	vec3 n_out12p0;
// If:12
	float n_in12p2 = 0.00001;
	vec3 n_in12p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out7p0) < n_in12p2)
	{
		n_out12p0 = n_in12p3;
	}
	else if(n_out3p0.x < n_out7p0)
	{
		n_out12p0 = vec3(n_out6p0);
	}
	else
	{
		n_out12p0 = vec3(n_out5p0);
	}


// Mix:13
	vec3 n_out13p0 = mix(vec3(n_out16p0.xyz), vec3(n_out9p0.xyz), n_out12p0);


// FloatOp:15
	float n_in15p1 = 0.01000;
	float n_out15p0 = n_out7p0 + n_in15p1;


	vec3 n_out4p0;
// If:4
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out15p0) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out3p0.x < n_out15p0)
	{
		n_out4p0 = vec3(n_out6p0);
	}
	else
	{
		n_out4p0 = vec3(n_out5p0);
	}


// Mix:10
	float n_in10p0 = 0.00000;
	float n_out10p0 = mix(n_in10p0, n_out4p0.x, n_out9p4);


// Output:0
	COLOR.rgb = n_out13p0;
	COLOR.a = n_out10p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(640, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_bwy24")
nodes/fragment/2/position = Vector2(-960, 0)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_llcj6")
nodes/fragment/3/position = Vector2(-600, 40)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_ou0xk")
nodes/fragment/4/position = Vector2(0, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_owyna")
nodes/fragment/5/position = Vector2(-360, 540)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_h8mbp")
nodes/fragment/6/position = Vector2(-360, 640)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_j2lpo")
nodes/fragment/7/position = Vector2(-1120, 360)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_yqomr")
nodes/fragment/8/position = Vector2(-700, 800)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_wtwit")
nodes/fragment/9/position = Vector2(-380, 820)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_wil4r")
nodes/fragment/10/position = Vector2(360, 680)
nodes/fragment/11/node = SubResource("VisualShaderNodeInput_00u2v")
nodes/fragment/11/position = Vector2(-1000, -240)
nodes/fragment/12/node = SubResource("VisualShaderNodeIf_yjawc")
nodes/fragment/12/position = Vector2(0, -80)
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_5crao")
nodes/fragment/13/position = Vector2(360, -120)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatOp_myc5b")
nodes/fragment/15/position = Vector2(-520, 360)
nodes/fragment/16/node = SubResource("VisualShaderNodeColorParameter_shiwb")
nodes/fragment/16/position = Vector2(-40, -360)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 4, 0, 5, 0, 4, 4, 6, 0, 4, 5, 8, 0, 9, 2, 4, 0, 10, 1, 9, 4, 10, 2, 10, 0, 0, 1, 11, 0, 3, 0, 3, 0, 12, 0, 7, 0, 12, 1, 5, 0, 12, 4, 6, 0, 12, 5, 9, 0, 13, 1, 12, 0, 13, 2, 13, 0, 0, 0, 7, 0, 15, 0, 15, 0, 4, 1, 16, 0, 13, 0)
